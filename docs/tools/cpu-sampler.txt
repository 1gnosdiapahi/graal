- `--cpusampler=true|false|<Output>` : Enable/Disable the CPU sampler, or enable with specific Output - as specified by the Output option (default: false). Choosing an output with this options defaults to printing the output to std out, except for the flamegraph which is printed to a flamegraph.svg file.
- `--cpusampler.Delay=<ms>` : Delay the sampling for this many milliseconds (default: 0).
- `--cpusampler.FilterFile=*` : Wildcard filter for source file paths. (eg. *program*.sl) (default: no filter).
- `--cpusampler.FilterLanguage=<languageId>` : Only profile the language with given ID. (eg. js) (default: profile all).
- `--cpusampler.FilterMimeType=<mime-type>` : Only profile the language with given mime-type. (eg. application/javascript) (default: profile all)
- `--cpusampler.FilterRootName=*` : Wildcard filter for program roots. (eg. Math.*) (default: no filter).
- `--cpusampler.GatherHitTimes` : Save a timestamp for each taken sample.
- `--cpusampler.MinSamples=[0, inf)` : Remove elements from output if they have less samples than this value (default: 0)
- `--cpusampler.Output=histogram|calltree|json|flamegraph` : Specify the output format to one of: histogram, calltree, json or flamegraph (default: histogram).
- `--cpusampler.OutputFile=<path>` : Save output to the given file. Output is printed to output stream by default.
- `--cpusampler.Period=<ms>` : Period in milliseconds to sample the stack (default: 10)
- `--cpusampler.StackLimit=[1, inf)` : Maximum number of maximum stack elements (default: 10000).
- `--cpusampler.SummariseThreads` : Print output as a summary of all 'per thread' profiles.
